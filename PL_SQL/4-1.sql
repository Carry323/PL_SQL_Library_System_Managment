CREATE OR REPLACE PROCEDURE RESERVE_BOOK (   I_CARD_ID   IN   NUMBER,   I_BOOK_ID   IN   NUMBER)
IS
   V_IS_RESERVED         NUMBER;
   V_IS_ACTIVE           NUMBER;
   V_IS_AVAILABLE        NUMBER;
   
BEGIN
   SELECT COUNT (1)INTO V_IS_RESERVED FROM RESERVATION
   WHERE BOOK_ID = I_BOOK_ID AND CARD_ID != I_CARD_ID;

   IF V_IS_RESERVED = 0 THEN SELECT COUNT (1) INTO V_IS_ACTIVE
        FROM CARD WHERE STATUS = 'ACTIVE' AND CARD_ID = I_CARD_ID;
		
   IF V_IS_ACTIVE > 0 THEN SELECT COUNT (1) INTO V_IS_AVAILABLE
        FROM BOOK WHERE (STATUS = 'AVAILABLE' OR STATUS = 'RENTED') AND BOOK_ID = I_BOOK_ID;

   IF V_IS_AVAILABLE > 0 THEN INSERT INTO RESERVATION (CARD_ID, BOOK_ID, RESERVATION_DATE)
        VALUES (I_CARD_ID, I_BOOK_ID, SYSDATE);

    DBMS_OUTPUT.PUT_LINE ('This book ' || I_BOOK_ID || ' reserved for ' || I_CARD_ID || ' card');
    DBMS_OUTPUT.PUT_LINE ('This book is inserted in reservation table.');
    ELSE
            DBMS_OUTPUT.PUT_LINE ('This book '|| I_BOOK_ID ||' is lost');
    END IF;
    ELSE
         DBMS_OUTPUT.PUT_LINE ('This card '|| I_CARD_ID ||' is inactive');
   END IF;
   ELSE
      DBMS_OUTPUT.PUT_LINE ('This book '|| I_BOOK_ID ||' is reserved');
   END IF;
   
--COMMIT;
EXCEPTION
   WHEN NO_DATA_FOUND
   THEN
      DBMS_OUTPUT.PUT_LINE ('EXCEPTION: NOT FOUND');
END RESERVE_BOOK;
.
/
